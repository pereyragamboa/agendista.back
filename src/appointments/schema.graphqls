schema {
    query: Query
    mutation: Mutation
}

type Appointment @key(fields: "id") {
    id: ID!
    customer: Customer!
    profile: Profile!
    services: [Service!]!
    date: Date
}

scalar Date

input AppointmentInput {
    customer: ID!
    profile: ID!
    services: [ID!]!
    date: Date
}

extend type Customer @key(fields: "id") {
    id: ID! @external
}

extend type Profile @key(fields: "id") {
    id: ID! @external
}

extend type Service @key(fields: "id") {
    id: ID! @external
}

type Query {
    getAppointment(appointmentId: ID!): Appointment!
    getCustomerAppointments(customerId: ID!): [Appointment!]!
    getProfileAppointments(profileId: ID!): [Appointment!]!
}

type Mutation {
    addAppointment(appointment: AppointmentInput): Appointment!
    cancelAppointment(appointmentId: ID!): ID
    updateAppointment(appointmentId: ID!, update: AppointmentInput): Appointment!
}